error: `flat_map` expects to be passed a 1-parameter closure
 --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:5:5
  |
5 |     konst::iter::eval!(R, flat_map(), next());
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: this error originates in the macro `$crate::__parse_closure_emit_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `flat_map` expects to be passed a 1-parameter closure
 --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:6:5
  |
6 |     konst::iter::eval!(R, flat_map(||R), next());
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: this error originates in the macro `$crate::__parse_closure_emit_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `flat_map` expects valid closure syntax, passed closure without return value
 --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:7:5
  |
7 |     konst::iter::eval!(R, flat_map(|_|), next());
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: this error originates in the macro `$crate::__parse_closure_no_expr_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `flat_map` expects no arguments after closure argument
 --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:8:5
  |
8 |     konst::iter::eval!(R, flat_map(|_|R, 10), next());
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: this error originates in the macro `$crate::__parse_closure_trailing_expr_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `flat_map` expects to be passed a 1-parameter closure
 --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:9:5
  |
9 |     konst::iter::eval!(R, flat_map(|a, b|R), next());
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: this error originates in the macro `$crate::__parse_closure_emit_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid argument(s) for `flatten` method: `10`
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:14:5
   |
14 |     konst::iter::eval!(S, flatten(10), next());
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::iter::__eval2_lowering` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid argument(s) for `fold` method: ``
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:18:5
   |
18 |     konst::iter::eval!(R, fold());
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::iter::__eval2_lowering` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid argument(s) for `fold` method: `0`
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:19:5
   |
19 |     konst::iter::eval!(R, fold(0));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::iter::__eval2_lowering` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `fold` expects to be passed a 2-parameter closure
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:20:5
   |
20 |     konst::iter::eval!(R, fold(0,));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::__parse_closure_emit_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `fold` expects to be passed a 2-parameter closure
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:21:5
   |
21 |     konst::iter::eval!(R, fold(0, || 10));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::__parse_closure_emit_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `fold` expects to be passed a 2-parameter closure
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:22:5
   |
22 |     konst::iter::eval!(R, fold(0, |_| 10));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::__parse_closure_emit_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `fold` expects valid closure syntax, passed closure without return value
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:23:5
   |
23 |     konst::iter::eval!(R, fold(0, |_, _| ));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::__parse_closure_no_expr_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `fold` expects no arguments after closure argument
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:24:5
   |
24 |     konst::iter::eval!(R, fold(0, |_, _| 10, 100));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::__parse_closure_trailing_expr_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `for_each` expects to be passed a 1-parameter closure
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:28:5
   |
28 |     konst::iter::eval!(R, for_each());
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::__parse_closure_emit_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `for_each` expects to be passed a 1-parameter closure
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:29:5
   |
29 |     konst::iter::eval!(R, for_each(||None));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::__parse_closure_emit_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `for_each` expects valid closure syntax, passed closure without return value
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:30:5
   |
30 |     konst::iter::eval!(R, for_each(|_|));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::__parse_closure_no_expr_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `for_each` expects no arguments after closure argument
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:31:5
   |
31 |     konst::iter::eval!(R, for_each(|_|(), 100));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::__parse_closure_trailing_expr_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `for_each` expects to be passed a 1-parameter closure
  --> tests/misc_tests/iter_eval_ui_tests/fl_to_fo_method_syntax_err.rs:32:5
   |
32 |     konst::iter::eval!(R, for_each(|a, b|None));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `$crate::__parse_closure_emit_error` which comes from the expansion of the macro `konst::iter::eval` (in Nightly builds, run with -Z macro-backtrace for more info)
