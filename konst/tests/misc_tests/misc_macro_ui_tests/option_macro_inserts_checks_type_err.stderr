error[E0308]: mismatched types
 --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:4:45
  |
4 |     let _: &mut u8 = option::get_or_insert!((), ());
  |                      -----------------------^^-----
  |                      |                      |
  |                      |                      expected `&mut Option<()>`, found `()`
  |                      arguments to this function are incorrect
  |
  = note: expected mutable reference `&mut Option<()>`
                     found unit type `()`
note: function defined here
 --> src/option.rs
  |
  | pub const fn __optmut_val<T>(opt: &mut Option<T>, val: T) -> (&mut Option<T>, T) {
  |              ^^^^^^^^^^^^

error[E0308]: mismatched types
 --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:4:22
  |
4 |     let _: &mut u8 = option::get_or_insert!((), ());
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut ()`
  |
  = note: expected mutable reference `&mut u8`
             found mutable reference `&mut ()`
  = note: this error originates in the macro `option::get_or_insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
 --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:4:22
  |
4 |     let _: &mut u8 = option::get_or_insert!((), ());
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut ()`
  |
  = note: expected mutable reference `&mut u8`
             found mutable reference `&mut ()`
  = note: this error originates in the macro `option::get_or_insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
 --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:5:45
  |
5 |     let _: &mut u8 = option::get_or_insert!(Some(()), ());
  |                      -----------------------^^^^^^^^-----
  |                      |                      |
  |                      |                      expected `&mut Option<()>`, found `Option<()>`
  |                      arguments to this function are incorrect
  |
  = note: expected mutable reference `&mut Option<()>`
                          found enum `Option<()>`
note: function defined here
 --> src/option.rs
  |
  | pub const fn __optmut_val<T>(opt: &mut Option<T>, val: T) -> (&mut Option<T>, T) {
  |              ^^^^^^^^^^^^
help: consider mutably borrowing here
  |
5 |     let _: &mut u8 = option::get_or_insert!(&mut Some(()), ());
  |                                             ++++

error[E0308]: mismatched types
 --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:5:22
  |
5 |     let _: &mut u8 = option::get_or_insert!(Some(()), ());
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut ()`
  |
  = note: expected mutable reference `&mut u8`
             found mutable reference `&mut ()`
  = note: this error originates in the macro `option::get_or_insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
 --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:5:22
  |
5 |     let _: &mut u8 = option::get_or_insert!(Some(()), ());
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut ()`
  |
  = note: expected mutable reference `&mut u8`
             found mutable reference `&mut ()`
  = note: this error originates in the macro `option::get_or_insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
 --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:6:60
  |
6 |     let _: &mut u8 = option::get_or_insert!(&mut Some(()), 0u8);
  |                      --------------------------------------^^^-
  |                      |                                     |
  |                      |                                     expected `()`, found `u8`
  |                      arguments to this function are incorrect
  |
help: the return type of this call is `u8` due to the type of the argument passed
 --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:6:22
  |
6 |     let _: &mut u8 = option::get_or_insert!(&mut Some(()), 0u8);
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---^
  |                                                            |
  |                                                            this argument influences the return type of `__optmut_val`
note: function defined here
 --> src/option.rs
  |
  | pub const fn __optmut_val<T>(opt: &mut Option<T>, val: T) -> (&mut Option<T>, T) {
  |              ^^^^^^^^^^^^
  = note: this error originates in the macro `option::get_or_insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
 --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:6:22
  |
6 |     let _: &mut u8 = option::get_or_insert!(&mut Some(()), 0u8);
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut ()`
  |
  = note: expected mutable reference `&mut u8`
             found mutable reference `&mut ()`
  = note: this error originates in the macro `option::get_or_insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
 --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:6:22
  |
6 |     let _: &mut u8 = option::get_or_insert!(&mut Some(()), 0u8);
  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut ()`
  |
  = note: expected mutable reference `&mut u8`
             found mutable reference `&mut ()`
  = note: this error originates in the macro `option::get_or_insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:10:50
   |
10 |     let _: &mut u8 = option::get_or_insert_with!((), || 0u8);
   |                                                  ^^ expected `&mut Option<_>`, found `()`
   |
   = note: expected mutable reference `&mut Option<_>`
                      found unit type `()`

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:11:50
   |
11 |     let _: &mut u8 = option::get_or_insert_with!(None::<()>, || 0u8);
   |                                                  ^^^^^^^^^^ expected `&mut Option<_>`, found `Option<()>`
   |
   = note: expected mutable reference `&mut Option<_>`
                           found enum `Option<()>`
help: consider mutably borrowing here
   |
11 |     let _: &mut u8 = option::get_or_insert_with!(&mut None::<()>, || 0u8);
   |                                                  ++++

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:12:22
   |
12 |     let _: &mut u8 = option::get_or_insert_with!(&mut None::<()>, || 0u8);
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut ()`
   |
   = note: expected mutable reference `&mut u8`
              found mutable reference `&mut ()`
   = note: this error originates in the macro `option::get_or_insert_with` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:12:70
   |
12 |     let _: &mut u8 = option::get_or_insert_with!(&mut None::<()>, || 0u8);
   |                      ------------------------------------------------^^^-
   |                      |                                               |
   |                      |                                               expected `()`, found `u8`
   |                      arguments to this function are incorrect
   |
note: function defined here
  --> src/option.rs
   |
   | pub const fn __overwrite_some<T>(opt: &mut Option<T>, val: T) {
   |              ^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:12:22
   |
12 |     let _: &mut u8 = option::get_or_insert_with!(&mut None::<()>, || 0u8);
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut ()`
   |
   = note: expected mutable reference `&mut u8`
              found mutable reference `&mut ()`
   = note: this error originates in the macro `option::get_or_insert_with` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:16:38
   |
16 |     let _: &mut u8 = option::insert!((), ());
   |                      ----------------^^-----
   |                      |               |
   |                      |               expected `&mut Option<()>`, found `()`
   |                      arguments to this function are incorrect
   |
   = note: expected mutable reference `&mut Option<()>`
                      found unit type `()`
note: function defined here
  --> src/option.rs
   |
   | pub const fn __optmut_val<T>(opt: &mut Option<T>, val: T) -> (&mut Option<T>, T) {
   |              ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:16:22
   |
16 |     let _: &mut u8 = option::insert!((), ());
   |                      ^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut ()`
   |
   = note: expected mutable reference `&mut u8`
              found mutable reference `&mut ()`
   = note: this error originates in the macro `option::insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:17:38
   |
17 |     let _: &mut u8 = option::insert!(Some(()), ());
   |                      ----------------^^^^^^^^-----
   |                      |               |
   |                      |               expected `&mut Option<()>`, found `Option<()>`
   |                      arguments to this function are incorrect
   |
   = note: expected mutable reference `&mut Option<()>`
                           found enum `Option<()>`
note: function defined here
  --> src/option.rs
   |
   | pub const fn __optmut_val<T>(opt: &mut Option<T>, val: T) -> (&mut Option<T>, T) {
   |              ^^^^^^^^^^^^
help: consider mutably borrowing here
   |
17 |     let _: &mut u8 = option::insert!(&mut Some(()), ());
   |                                      ++++

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:17:22
   |
17 |     let _: &mut u8 = option::insert!(Some(()), ());
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut ()`
   |
   = note: expected mutable reference `&mut u8`
              found mutable reference `&mut ()`
   = note: this error originates in the macro `option::insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:18:22
   |
18 |     let _: &mut u8 = option::insert!(&mut Some(()), ());
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut ()`
   |
   = note: expected mutable reference `&mut u8`
              found mutable reference `&mut ()`
   = note: this error originates in the macro `option::insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:19:55
   |
19 |     let _: &mut u8 = option::insert!(&mut Some(0u16), ());
   |                      ---------------------------------^^-
   |                      |                                |
   |                      |                                expected `u16`, found `()`
   |                      arguments to this function are incorrect
   |
help: the return type of this call is `()` due to the type of the argument passed
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:19:22
   |
19 |     let _: &mut u8 = option::insert!(&mut Some(0u16), ());
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^--^
   |                                                       |
   |                                                       this argument influences the return type of `__optmut_val`
note: function defined here
  --> src/option.rs
   |
   | pub const fn __optmut_val<T>(opt: &mut Option<T>, val: T) -> (&mut Option<T>, T) {
   |              ^^^^^^^^^^^^
   = note: this error originates in the macro `option::insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:19:22
   |
19 |     let _: &mut u8 = option::insert!(&mut Some(0u16), ());
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&mut u8`, found `&mut u16`
   |
   = note: expected mutable reference `&mut u8`
              found mutable reference `&mut u16`
   = note: this error originates in the macro `option::insert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:23:17
   |
23 | const _: bool = option::is_some_and!((), |_| false);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&Option<_>`, found `&()`
   |
   = note: expected reference `&Option<_>`
              found reference `&()`
   = note: this error originates in the macro `option::is_some_and` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:24:56
   |
24 | const _: bool = option::is_some_and!(None::<()>, |__ @ 0u8..| false);
   |                 ---------------------------------------^^^----------
   |                 |                                      |
   |                 |                                      expected `()`, found `u8`
   |                 this expression has type `&()`

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:25:54
   |
25 | const _: bool = option::is_some_and!(None::<u8>, |_| ());
   |                                                      ^^ expected `bool`, found `()`

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:27:17
   |
27 | const _: bool = option::is_none_or!((), |_| false);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&Option<_>`, found `&()`
   |
   = note: expected reference `&Option<_>`
              found reference `&()`
   = note: this error originates in the macro `option::is_none_or` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:28:55
   |
28 | const _: bool = option::is_none_or!(None::<()>, |__ @ 0u8..| false);
   |                 --------------------------------------^^^----------
   |                 |                                     |
   |                 |                                     expected `()`, found `u8`
   |                 this expression has type `&()`

error[E0308]: mismatched types
  --> tests/misc_tests/misc_macro_ui_tests/option_macro_inserts_checks_type_err.rs:29:53
   |
29 | const _: bool = option::is_none_or!(None::<u8>, |_| ());
   |                                                     ^^ expected `bool`, found `()`
