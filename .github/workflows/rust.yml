name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 2
      matrix:
        rust: [stable, beta, nightly, 1.64.0]

    steps:
    - uses: actions/checkout@v2
    - name: ci-all-versions
      run: |
        set -x
        rustup override set ${{ matrix.rust }}
        cargo update

        cd "${{github.workspace}}/konst_kernel/"
        cargo test --no-default-features 
        cargo test --no-default-features --features "debug"
        cargo test --no-default-features --features "debug rust_1_64"
        cargo test --no-default-features --features "debug __for_konst rust_1_64"
          
        cd "${{github.workspace}}/konst_proc_macros/"
        cargo build
        
        cd "${{github.workspace}}/konst/"
        cargo test --no-default-features --features "debug"
        cargo test --no-default-features --features "debug cmp"
        cargo test --no-default-features --features "debug parsing_proc"
        cargo test --no-default-features --features "debug parsing"
        cargo test --no-default-features --features "debug __cp_derive"
        cargo test --no-default-features --features "debug __cp_derive alloc cmp parsing_proc"

    - uses: actions/checkout@v2
    - name: ci-stable-or-later
      if: ${{ matrix.rust == 'stable' || matrix.rust == 'beta' || matrix.rust == 'nightly' }}
      run: |
        set -x
        rustup override set ${{ matrix.rust }}
        cargo update
        cd "${{github.workspace}}/konst/"
        cargo test --no-default-features --features "debug rust_latest_stable cmp"
        cargo test --no-default-features --features "debug rust_latest_stable parsing"
        cargo test --no-default-features --features "debug rust_latest_stable parsing_proc"
        cargo test --no-default-features --features "debug rust_latest_stable __cp_derive"
        cargo test --no-default-features --features "debug rust_latest_stable __cp_derive alloc cmp parsing_proc"

    - uses: actions/checkout@v2
    - name: ci-nighly
      if: ${{ matrix.rust == 'nightly' && runner.os == 'Linux' }}
      run: |
        set -x
        rustup override set ${{ matrix.rust }}

        cargo update -Z minimal-versions
        
        cd "${{github.workspace}}/konst_proc_macros/"
        cargo build

        cd "${{github.workspace}}/konst/"
        
        cargo test --no-default-features --features "debug nightly_mut_refs"
        cargo test --no-default-features --features "debug __cp_derive cmp parsing_proc rust_latest_stable nightly_mut_refs"
        cargo test --no-default-features \
            --features "alloc debug __cp_derive cmp parsing_proc rust_latest_stable nightly_mut_refs"

        MIRI_NIGHTLY=nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/miri)
        echo "Installing latest nightly with Miri"
        echo "$MIRI_NIGHTLY"
        rustup set profile minimal
        rustup default "$MIRI_NIGHTLY"
        rustup override set "$MIRI_NIGHTLY"
        rustup component add miri
        cargo miri setup

        cargo clean 

        env RUST_BACKTRACE=0 MIRIFLAGS="-Zmiri-disable-isolation " \
            cargo miri test --no-default-features \
            --features "alloc debug cmp parsing_proc rust_latest_stable nightly_mut_refs"
