name: Rust

on:
    push:
        branches:
        - main

    pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 2
      matrix:
        rust: [
            stable,
            beta,
            nightly,
            # the MSRV of konst
            1.89.0,
        ]

    steps:
    - uses: actions/checkout@v2
    - name: ci-stable-or-later-env_vars
      if: ${{ matrix.rust == 'stable' || matrix.rust == 'beta' || matrix.rust == 'nightly' }}
      run: echo "rustv=rust_latest_stable" >> $GITHUB_ENV

    - uses: actions/checkout@v2
    - name: ci-all-versions
      run: |
        set -ex
        rustup override set ${{ matrix.rust }}
        cargo update

        cd "${{github.workspace}}/konst_proc_macros/"
        cargo build
        
        cd "${{github.workspace}}/konst/"
        cargo test --no-default-features --features "debug ${{env.rustv}} "
        cargo test --no-default-features --features "debug ${{env.rustv}} alloc"
        cargo test --no-default-features --features "debug ${{env.rustv}} cmp"
        cargo test --no-default-features --features "debug ${{env.rustv}} iter"
        cargo test --no-default-features --features "debug ${{env.rustv}} parsing_proc"
        cargo test --no-default-features --features "debug ${{env.rustv}} parsing"
        cargo test --no-default-features --features "debug ${{env.rustv}} const_panic_derive"
        cargo test --no-default-features --features \
          "debug ${{env.rustv}} alloc cmp iter parsing_proc const_panic_derive"

    - uses: actions/checkout@v2
    - name: ci-nighly
      if: ${{ matrix.rust == 'nightly' && runner.os == 'Linux' }}
      run: |
        set -ex
        rustup override set ${{ matrix.rust }}

        cargo update -Z minimal-versions
        
        cd "${{github.workspace}}/konst_proc_macros/"
        cargo build

        cd "${{github.workspace}}/konst/"
        
        cargo test --no-default-features --features "debug rust_latest_stable"
        cargo test --no-default-features --features \
          "debug rust_latest_stable alloc cmp iter parsing_proc const_panic_derive"

        MIRI_NIGHTLY=nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/miri)
        echo "Installing latest nightly with Miri"
        echo "$MIRI_NIGHTLY"
        rustup set profile minimal
        rustup default "$MIRI_NIGHTLY"
        rustup override set "$MIRI_NIGHTLY"
        rustup component add miri
        cargo miri setup

        cargo clean 

        env RUST_BACKTRACE=0 MIRIFLAGS="-Zmiri-disable-isolation " \
            cargo miri test --no-default-features \
            --features "debug rust_latest_stable alloc cmp iter parsing_proc const_panic_derive"
